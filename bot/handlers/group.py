import logging

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.filters.admin import AdminFilter
from bot.fsm.group import GroupStates
from bot.keyboards.group import (
    groups_list_keyboard,
    delete_groups_keyboard,
    group_detail_keyboard,
    confirm_delete_group_keyboard,
)
from bot.keyboards.site import site_actions_keyboard
from bot.services.group import GroupService, GroupHandler
from bot.services.link import LinkService
from bot.services.site import SiteService
from bot.utils.callback import parse_callback
from bot.utils.group import _get_group_info_text
from core.config import load_config

logger = logging.getLogger(__name__)

config = load_config()
admin_ids = config.tg_bot.admin_ids

router = Router()
router.message.filter(AdminFilter(admin_ids))


class GroupTextTemplates:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –≥—Ä—É–ø–ø"""

    GROUPS_LIST_TEXT = (
        "üìÇ <b>–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø</b>\n\n"
        "üîπ –ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –≥—Ä—É–ø–ø—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.\n\n"
        "‚û°Ô∏è –ü–µ—Ä–µ–π–¥—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É, –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
        "   ‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.\n"
        "   ‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö.\n"
        "   ‚Ä¢ –ó–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä—è–º–æ –∏–∑ –≥—Ä—É–ø–ø—ã.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –Ω–∏–∂–µ üëá"
    )

    NO_GROUPS_TEXT = (
        "‚ö†Ô∏è <b>–ì—Ä—É–ø–ø –ø–æ–∫–∞ –Ω–µ—Ç</b>\n\n"
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:\n"
        "   ‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.\n"
        "   ‚Ä¢ –§–æ—Ä–º–∏—Ä—É–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
        "   ‚Ä¢ –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.\n\n"
    )

    ADD_GROUP_START_TEXT = (
        "üÜï <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–æ –µ—ë –Ω–∞—Ö–æ–¥–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <i>¬´–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ç–∏–≤–æ–≥–∞–∑–æ–≤¬ª</i> –∏–ª–∏ <i>¬´–ê–Ω–∞–ª–∏–∑ –º–æ—Ç–æ—Ü–∏–∫–ª–æ–≤¬ª</i>.\n\n"
        "üëâ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∏–∂–µ:"
    )

    DELETE_GROUPS_TEXT = (
        "üóë <b>–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.\n"
        "‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ <b>–±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ</b> ‚Äî –≤–º–µ—Å—Ç–µ —Å –Ω–µ–π –∏—Å—á–µ–∑–Ω—É—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n\n"
        "üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )

    NO_GROUPS_DELETE_TEXT = (
        "‚ö†Ô∏è –ì—Ä—É–ø–ø—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n\n"
        "–ù–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.\n\n"
        "üëâ –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ –º–µ–Ω—é ¬´‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É¬ª."
    )

    ALL_GROUPS_DELETED_TEXT = (
        "‚úÖ –í—Å–µ –≤–∞—à–∏ –≥—Ä—É–ø–ø—ã —É–¥–∞–ª–µ–Ω—ã!\n\n"
        "–°–µ–π—á–∞—Å —É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è"
    )

    @staticmethod
    def get_site_actions_text(site_title: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å —Å–∞–π—Ç–æ–º"""
        return (
            f"üåê –í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å —Å–∞–π—Ç–æ–º <b>{site_title}</b>\n\n"
            "üìñ <b>–ß—Ç–µ–Ω–∏–µ –≥—Ä—É–ø–ø</b>\n"
            "   ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø —Å–∞–π—Ç–∞.\n"
            "   ‚Ä¢ –í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∏ —Å–æ–∑–¥–∞—Ç—å –≤ –Ω–µ–π —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
            "   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä—è–º–æ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã.\n\n"
            "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n"
            "   ‚Ä¢ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞.\n\n"
            "‚ùå <b>–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n"
            "   ‚Ä¢ –£–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—É—é –≥—Ä—É–ø–ø—É.\n\n"
            "üëâ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
        )


async def _handle_group_operation_error(callback: CallbackQuery, operation_name: str, error: Exception) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –≥—Ä—É–ø–ø–∞–º–∏"""
    logger.error(f"–û—à–∏–±–∫–∞ –≤ {operation_name}: {error}")
    await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")


@router.callback_query(F.data.startswith("read_groups_"))
async def read_groups(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø"""
    try:
        _, _, site_id = parse_callback(callback.data)
        site_id = int(site_id)
        groups = await GroupService.get_groups(site_id, callback.from_user.id)

        text = GroupTextTemplates.GROUPS_LIST_TEXT if groups else GroupTextTemplates.NO_GROUPS_TEXT

        await callback.message.edit_text(
            text,
            reply_markup = groups_list_keyboard(groups, site_id, page = 1)
        )
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "read_groups", e)


@router.callback_query(F.data.startswith("groups_page_"))
async def groups_page(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø"""
    try:
        _, _, site_id, page = parse_callback(callback.data)
        site_id = int(site_id)
        page = int(page)
        groups = await GroupService.get_groups(site_id, callback.from_user.id)

        await callback.message.edit_reply_markup(
            reply_markup = groups_list_keyboard(groups, site_id, page)
        )
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "groups_page", e)


@router.callback_query(F.data.startswith("add_group_"))
async def add_group_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    try:
        _, _, site_id = parse_callback(callback.data)
        site_id = int(site_id)

        await state.update_data(site_id = site_id)
        await state.set_state(GroupStates.adding_group)

        await callback.message.answer(text = GroupTextTemplates.ADD_GROUP_START_TEXT)
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "add_group_start", e)


@router.message(GroupStates.adding_group)
async def add_group_name(message: Message, state: FSMContext):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    try:
        data = await state.get_data()
        site_id = int(data["site_id"])
        site = await SiteService.get_site(site_id)
        group_title = message.text.strip()

        if error := await GroupHandler.validate_group_title(group_title):
            await message.answer(error)
            return

        await GroupService.add_group(
            site_id = site_id,
            title = group_title,
            telegram_id = message.from_user.id
        )

        site_actions_text = GroupTextTemplates.get_site_actions_text(site.title)

        await message.answer(f"‚úÖ –ì—Ä—É–ø–ø–∞ '{group_title}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        await message.answer(
            text = site_actions_text,
            reply_markup = site_actions_keyboard(site_id)
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ add_group_name: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä—É–ø–ø—ã")
    finally:
        await state.clear()


@router.callback_query(F.data.startswith("delete_group_"))
async def delete_groups_menu(callback: CallbackQuery):
    """–ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø"""
    try:
        _, _, site_id = parse_callback(callback.data)
        site_id = int(site_id)
        groups = await GroupService.get_groups(site_id, callback.from_user.id)

        if not groups:
            await callback.answer(GroupTextTemplates.NO_GROUPS_DELETE_TEXT)
        else:
            await callback.message.edit_text(
                text = GroupTextTemplates.DELETE_GROUPS_TEXT,
                reply_markup = delete_groups_keyboard(groups, site_id, page = 1)
            )
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "delete_groups_menu", e)


@router.callback_query(F.data.startswith("delete_groups_page_"))
async def delete_groups_page(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø"""
    try:
        await callback.answer()

        _, _, _, site_id, page = parse_callback(callback.data)
        site_id = int(site_id)
        page = int(page)
        groups = await GroupService.get_groups(site_id, callback.from_user.id)

        await callback.message.edit_reply_markup(
            reply_markup = delete_groups_keyboard(groups, site_id, page)
        )

    except Exception as e:
        await _handle_group_operation_error(callback, "delete_groups_page", e)


@router.callback_query(F.data.startswith("group_delete_"))
async def delete_group(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    try:
        _, _, group_id, site_id, page = parse_callback(callback.data)
        group_id = int(group_id)
        site_id = int(site_id)
        page = int(page)

        group = await GroupService.get_group(group_id)
        count_links = await LinkService.get_count_product_link_by_group_id(group_id = group_id)

        confirmation_text = (
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ:\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {group.title}\n"
            f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {group.created_at.strftime('%Y-%m-%d %H:%M')}\n"
            f"–ê–∫—Ç–∏–≤–Ω–∞: {'–î–∞' if group.is_active else '–ù–µ—Ç'}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ –≥—Ä—É–ø–ø–µ: {count_links}"
            f"<b>\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –≥—Ä—É–ø–ø—É?</b>"
        )

        await callback.message.edit_text(
            confirmation_text,
            reply_markup = confirm_delete_group_keyboard(group.id, site_id, page)
        )
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "delete_group", e)


@router.callback_query(F.data.startswith(("group_confirm_", "group_cancel_")))
async def process_delete_group_confirmation(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    try:
        _, _, group_id, site_id, page = parse_callback(callback.data)
        group_id = int(group_id)
        site_id = int(site_id)
        page = int(page)

        if callback.data.startswith("group_confirm_"):
            await GroupService.delete_group(group_id)
            await callback.answer("‚úÖ –ì—Ä—É–ø–ø–∞ —É–¥–∞–ª–µ–Ω–∞!")
        else:
            await callback.answer("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

        groups = await GroupService.get_groups(site_id, callback.from_user.id)

        if groups:
            await callback.message.edit_text(
                GroupTextTemplates.DELETE_GROUPS_TEXT,
                reply_markup = delete_groups_keyboard(groups, site_id, page)
            )
        else:
            await callback.message.edit_text(
                GroupTextTemplates.ALL_GROUPS_DELETED_TEXT,
                reply_markup = site_actions_keyboard(site_id)
            )

    except Exception as e:
        await _handle_group_operation_error(callback, "process_delete_group_confirmation", e)


@router.callback_query(F.data.startswith("group_info_"))
async def group_info(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ"""
    try:
        _, _, group_id, site_id = parse_callback(callback.data)
        group_id = int(group_id)
        site_id = int(site_id)

        group_info_text = await _get_group_info_text(group_id)
        group = await GroupService.get_group(group_id)

        await callback.message.edit_text(
            group_info_text,
            reply_markup = group_detail_keyboard(group.id, site_id, group.is_active)
        )
        await callback.answer()

    except Exception as e:
        await _handle_group_operation_error(callback, "group_info", e)
