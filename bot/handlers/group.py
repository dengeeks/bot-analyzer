from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.filters.admin import AdminFilter
from bot.fsm.group import GroupStates
from bot.keyboards.group import (
    groups_list_keyboard,
    delete_groups_keyboard,
    group_detail_keyboard,
    confirm_delete_group_keyboard,
)
from bot.keyboards.site import site_actions_keyboard
from bot.services.group import GroupService, GroupHandler
from bot.services.link import LinkService
from bot.services.site import SiteService
from bot.utils.callback import parse_callback
from core.config import load_config

config = load_config()
admin_ids = config.tg_bot.admin_ids

router = Router()
router.message.filter(AdminFilter(admin_ids))


@router.callback_query(F.data.startswith("read_groups_"))
async def read_groups(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø"""
    site_id = int(parse_callback(callback.data)[2])

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
    groups = await GroupService.get_groups(site_id, callback.from_user.id)

    text = (
        "üìÇ <b>–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø</b>\n\n"
        "üîπ –ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –≥—Ä—É–ø–ø—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.\n\n"
        "‚û°Ô∏è –ü–µ—Ä–µ–π–¥—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É, –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
        "   ‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.\n"
        "   ‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö.\n"
        "   ‚Ä¢ –ó–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä—è–º–æ –∏–∑ –≥—Ä—É–ø–ø—ã.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –Ω–∏–∂–µ üëá"
        if groups else
        "‚ö†Ô∏è <b>–ì—Ä—É–ø–ø –ø–æ–∫–∞ –Ω–µ—Ç</b>\n\n"
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:\n"
        "   ‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.\n"
        "   ‚Ä¢ –§–æ—Ä–º–∏—Ä—É–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
        "   ‚Ä¢ –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.\n\n"
    )

    await callback.message.edit_text(
        text,
        reply_markup = groups_list_keyboard(groups, site_id, page = 1)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("groups_page_"))
async def groups_page(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø"""
    _, _, site_id, page = parse_callback(callback.data)

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    groups = await GroupService.get_groups(int(site_id), callback.from_user.id)

    await callback.message.edit_reply_markup(
        reply_markup = groups_list_keyboard(groups, int(site_id), int(page))
    )
    await callback.answer()


@router.callback_query(F.data.startswith("add_group_"))
async def add_group_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    site_id = int(parse_callback(callback.data)[2])

    # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã
    await state.update_data(site_id = site_id)
    await state.set_state(GroupStates.adding_group)

    text = (
        "üÜï <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–æ –µ—ë –Ω–∞—Ö–æ–¥–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <i>¬´–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ç–∏–≤–æ–≥–∞–∑–æ–≤¬ª</i> –∏–ª–∏ <i>¬´–ê–Ω–∞–ª–∏–∑ –º–æ—Ç–æ—Ü–∏–∫–ª–æ–≤¬ª</i>.\n\n"
        "üëâ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∏–∂–µ:"
    )
    await callback.message.answer(text = text)
    await callback.answer()


@router.message(GroupStates.adding_group)
async def add_group_name(message: Message, state: FSMContext):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    data = await state.get_data()
    site_id = data["site_id"]

    # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –°–∞–π—Ç –ø–æ –µ–≥–æ ID
    site = await SiteService.get_site(int(site_id))

    # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
    group_title = message.text

    # –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
    if error := await GroupHandler.validate_group_title(group_title):
        await message.answer(error)
        return

    group_title = group_title.strip()
    # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await GroupService.add_group(
        site_id = site_id,
        title = group_title,
        telegram_id = message.from_user.id
    )

    text = (
        f"üåê –í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å —Å–∞–π—Ç–æ–º <b>: {site.title}</b>\n\n"
        "üìñ <b>–ß—Ç–µ–Ω–∏–µ –≥—Ä—É–ø–ø</b>\n"
        "   ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø —Å–∞–π—Ç–∞.\n"
        "   ‚Ä¢ –í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∏ —Å–æ–∑–¥–∞—Ç—å –≤ –Ω–µ–π —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
        "   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä—è–º–æ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã.\n\n"
        "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n"
        "   ‚Ä¢ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞.\n\n"
        "‚ùå <b>–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n"
        "   ‚Ä¢ –£–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—É—é –≥—Ä—É–ø–ø—É.\n\n"
        "üëâ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    )

    await message.answer(f"‚úÖ –ì—Ä—É–ø–ø–∞ '{group_title}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    await message.answer(
        text = text,
        reply_markup = site_actions_keyboard(site_id)
    )
    await state.clear()


@router.callback_query(F.data.startswith("delete_group_"))
async def delete_groups_menu(callback: CallbackQuery):
    """–ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø"""
    site_id = int(parse_callback(callback.data)[2])

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
    groups = await GroupService.get_groups(site_id, callback.from_user.id)

    text = (
        "‚ö†Ô∏è –ì—Ä—É–ø–ø—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n\n"
        "–ù–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.\n\n"
        "üëâ –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ –º–µ–Ω—é ¬´‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É¬ª."
    )

    delete_text = (
        "üóë <b>–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.\n"
        "‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ <b>–±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ</b> ‚Äî –≤–º–µ—Å—Ç–µ —Å –Ω–µ–π –∏—Å—á–µ–∑–Ω—É—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n\n"
        "üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )

    if not groups:
        await callback.answer(text)
    else:
        await callback.message.edit_text(
            text = delete_text,
            reply_markup = delete_groups_keyboard(groups, site_id, page = 1)
        )
    await callback.answer()


@router.callback_query(F.data.startswith("delete_groups_page_"))
async def delete_groups_page(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø"""
    _, _, site_id, page = parse_callback(callback.data)

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
    groups = await GroupService.get_groups(int(site_id), callback.from_user.id)

    await callback.message.edit_reply_markup(
        reply_markup = delete_groups_keyboard(groups, int(site_id), int(page))
    )
    await callback.answer()


@router.callback_query(F.data.startswith("group_delete_"))
async def delete_group(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    _, _, group_id, site_id, page = parse_callback(callback.data)

    # –ø–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group = await GroupService.get_group(int(group_id))
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Å—ã–ª–æ–∫ –≤ –≥—Ä—É–ø–ø–µ(–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞)
    count_links = await LinkService.get_count_product_link_by_group_id(group_id = group_id)

    text = (
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ:\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {group.title}\n"
        f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {group.created_at.strftime('%Y-%m-%d %H:%M')}\n"
        f"–ê–∫—Ç–∏–≤–Ω–∞: {'–î–∞' if group.is_active else '–ù–µ—Ç'}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ –≥—Ä—É–ø–ø–µ: {count_links}"
    )
    text += "<b>\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –≥—Ä—É–ø–ø—É?</b>"

    await callback.message.edit_text(
        text,
        reply_markup = confirm_delete_group_keyboard(group.id, int(site_id), int(page))
    )
    await callback.answer()


@router.callback_query(F.data.startswith(("group_confirm_", "group_cancel_")))
async def process_delete_group_confirmation(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    parts = parse_callback(callback.data)
    site_id, page = int(parts[-2]), int(parts[-1])

    if callback.data.startswith("group_confirm_"):
        group_id = int(parts[2])
        await GroupService.delete_group(group_id)
        await callback.answer("‚úÖ –ì—Ä—É–ø–ø–∞ —É–¥–∞–ª–µ–Ω–∞!")
    else:
        await callback.answer("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

    groups = await GroupService.get_groups(site_id, callback.from_user.id)

    delete_text = (
        "üóë <b>–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.\n"
        "‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ <b>–±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ</b> ‚Äî –≤–º–µ—Å—Ç–µ —Å –Ω–µ–π –∏—Å—á–µ–∑–Ω—É—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n\n"
        "üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )

    text = (
        "‚úÖ –í—Å–µ –≤–∞—à–∏ –≥—Ä—É–ø–ø—ã —É–¥–∞–ª–µ–Ω—ã!\n\n"
        "–°–µ–π—á–∞—Å —É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è"
    )

    if groups:
        await callback.message.edit_text(
            delete_text,
            reply_markup = delete_groups_keyboard(groups, site_id, page)
        )
    else:

        await callback.message.edit_text(
            text,
            reply_markup = site_actions_keyboard(site_id)
        )


@router.callback_query(F.data.startswith("group_info_"))
async def group_info(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ"""
    _, _, group_id, site_id = parse_callback(callback.data)

    # –ø–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group = await GroupService.get_group(int(group_id))

    # –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Å—ã–ª–æ–∫ –≤ –≥—Ä—É–ø–ø–µ(–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞)
    count_links = await LinkService.get_count_product_link_by_group_id(group_id = group_id)

    parser_text = (
        "‚è∏ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Å–µ—Ä ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.\n"
        if group.is_active else
        "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.\n"
    )

    text = (
        f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ:\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {group.title}\n"
        f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {group.created_at.strftime('%Y-%m-%d %H:%M')}\n"
        f"–°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–Ω–∞ ‚úÖ' if group.is_active else '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚ùå'}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {count_links}\n\n"

        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
        "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã.\n"
        "üìë –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ‚Äî —É–≤–∏–¥–µ—Ç—å –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤.\n"
        "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü,"
        " —Å—Å—ã–ª–∫–∏ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É).\n"
        "‚ùå –£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É ‚Äî —É–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—É—é —Ç–∞–±–ª–∏—Ü—É.\n"
        f"{parser_text}"
        "‚è≠ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n"
        "üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–∫—É—â–∏–º —Ç–∞–±–ª–∏—Ü–∞–º.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ ‚¨áÔ∏è"
    )

    await callback.message.edit_text(
        text,
        reply_markup = group_detail_keyboard(group.id, int(site_id), group.is_active)
    )
    await callback.answer()
